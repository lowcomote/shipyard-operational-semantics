/*
 * generated by Xtext 2.25.0
 */
package at.jku.bise.shipyardV4.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ShipyardV4GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ShipyardV4RootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardV4Root");
		private final Assignment cShipyardV4RootAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cShipyardV4RootShipyardParserRuleCall_0 = (RuleCall)cShipyardV4RootAssignment.eContents().get(0);
		
		////EClass ShipyardV4Root
		//ShipyardV4Root returns ShipyardV4Root:
		//            //EReference is not a keyword
		//            shipyardV4Root=Shipyard
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//shipyardV4Root=Shipyard
		public Assignment getShipyardV4RootAssignment() { return cShipyardV4RootAssignment; }
		
		//Shipyard
		public RuleCall getShipyardV4RootShipyardParserRuleCall_0() { return cShipyardV4RootShipyardParserRuleCall_0; }
	}
	public class ShipyardPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cShipyardApiVersionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cShipyardKindParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cShipyardMetadataParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cShipyardSpec1ParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ShipyardPropertiesAbstract returns ShipyardPropertiesAbstract:
		//    ShipyardApiVersion | ShipyardKind | ShipyardMetadata | ShipyardSpec1;
		@Override public ParserRule getRule() { return rule; }
		
		//ShipyardApiVersion | ShipyardKind | ShipyardMetadata | ShipyardSpec1
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ShipyardApiVersion
		public RuleCall getShipyardApiVersionParserRuleCall_0() { return cShipyardApiVersionParserRuleCall_0; }
		
		//ShipyardKind
		public RuleCall getShipyardKindParserRuleCall_1() { return cShipyardKindParserRuleCall_1; }
		
		//ShipyardMetadata
		public RuleCall getShipyardMetadataParserRuleCall_2() { return cShipyardMetadataParserRuleCall_2; }
		
		//ShipyardSpec1
		public RuleCall getShipyardSpec1ParserRuleCall_3() { return cShipyardSpec1ParserRuleCall_3; }
	}
	public class MetadataPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.MetadataPropertiesAbstract");
		private final RuleCall cMetadataNameParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MetadataPropertiesAbstract returns MetadataPropertiesAbstract:
		//    MetadataName;
		@Override public ParserRule getRule() { return rule; }
		
		//MetadataName
		public RuleCall getMetadataNameParserRuleCall() { return cMetadataNameParserRuleCall; }
	}
	public class ShipyardSpecPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardSpecPropertiesAbstract");
		private final RuleCall cShipyardSpecStagesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ShipyardSpecPropertiesAbstract returns ShipyardSpecPropertiesAbstract:
		//    ShipyardSpecStages;
		@Override public ParserRule getRule() { return rule; }
		
		//ShipyardSpecStages
		public RuleCall getShipyardSpecStagesParserRuleCall() { return cShipyardSpecStagesParserRuleCall; }
	}
	public class StagePropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.StagePropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStageNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStageSequencesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StagePropertiesAbstract returns StagePropertiesAbstract:
		//    StageName | StageSequences;
		@Override public ParserRule getRule() { return rule; }
		
		//StageName | StageSequences
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StageName
		public RuleCall getStageNameParserRuleCall_0() { return cStageNameParserRuleCall_0; }
		
		//StageSequences
		public RuleCall getStageSequencesParserRuleCall_1() { return cStageSequencesParserRuleCall_1; }
	}
	public class SequencePropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequencePropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSequenceTriggeredOnParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSequenceTasksParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//SequencePropertiesAbstract returns SequencePropertiesAbstract:
		//    SequenceName | SequenceTriggeredOn | SequenceTasks;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceName | SequenceTriggeredOn | SequenceTasks
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceName
		public RuleCall getSequenceNameParserRuleCall_0() { return cSequenceNameParserRuleCall_0; }
		
		//SequenceTriggeredOn
		public RuleCall getSequenceTriggeredOnParserRuleCall_1() { return cSequenceTriggeredOnParserRuleCall_1; }
		
		//SequenceTasks
		public RuleCall getSequenceTasksParserRuleCall_2() { return cSequenceTasksParserRuleCall_2; }
	}
	public class TriggerPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TriggerPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTriggerEventParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTriggerSelectorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TriggerPropertiesAbstract returns TriggerPropertiesAbstract:
		//    TriggerEvent | TriggerSelector;
		@Override public ParserRule getRule() { return rule; }
		
		//TriggerEvent | TriggerSelector
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TriggerEvent
		public RuleCall getTriggerEventParserRuleCall_0() { return cTriggerEventParserRuleCall_0; }
		
		//TriggerSelector
		public RuleCall getTriggerSelectorParserRuleCall_1() { return cTriggerSelectorParserRuleCall_1; }
	}
	public class SelectorPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SelectorPropertiesAbstract");
		private final RuleCall cSelectorMatchParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SelectorPropertiesAbstract returns SelectorPropertiesAbstract:
		//    SelectorMatch;
		@Override public ParserRule getRule() { return rule; }
		
		//SelectorMatch
		public RuleCall getSelectorMatchParserRuleCall() { return cSelectorMatchParserRuleCall; }
	}
	public class SelectorMatchPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SelectorMatchPropertiesAbstract");
		private final RuleCall cSelectorMatchPatternProperties0ParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SelectorMatchPropertiesAbstract returns SelectorMatchPropertiesAbstract:
		//    SelectorMatchPatternProperties0;
		@Override public ParserRule getRule() { return rule; }
		
		//SelectorMatchPatternProperties0
		public RuleCall getSelectorMatchPatternProperties0ParserRuleCall() { return cSelectorMatchPatternProperties0ParserRuleCall; }
	}
	public class TaskPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TaskPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTaskNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTaskPropertiesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TaskPropertiesAbstract returns TaskPropertiesAbstract:
		//    TaskName | TaskProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//TaskName | TaskProperties
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TaskName
		public RuleCall getTaskNameParserRuleCall_0() { return cTaskNameParserRuleCall_0; }
		
		//TaskProperties
		public RuleCall getTaskPropertiesParserRuleCall_1() { return cTaskPropertiesParserRuleCall_1; }
	}
	public class TaskPropertiesPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TaskPropertiesPropertiesAbstract");
		private final RuleCall cTaskPropertiesAdditionalPropertiesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TaskPropertiesPropertiesAbstract returns TaskPropertiesPropertiesAbstract:
		//    TaskPropertiesAdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//TaskPropertiesAdditionalProperties
		public RuleCall getTaskPropertiesAdditionalPropertiesParserRuleCall() { return cTaskPropertiesAdditionalPropertiesParserRuleCall; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntegerValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNullValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cStringValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cNumberValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cArrayValueParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Value returns jsonMetaschemaMM::Value:
		//    IntegerValue | BooleanValue | NullValue | StringValue | ObjectValue | NumberValue | ArrayValue;
		@Override public ParserRule getRule() { return rule; }
		
		//IntegerValue | BooleanValue | NullValue | StringValue | ObjectValue | NumberValue | ArrayValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntegerValue
		public RuleCall getIntegerValueParserRuleCall_0() { return cIntegerValueParserRuleCall_0; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_1() { return cBooleanValueParserRuleCall_1; }
		
		//NullValue
		public RuleCall getNullValueParserRuleCall_2() { return cNullValueParserRuleCall_2; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_3() { return cStringValueParserRuleCall_3; }
		
		//ObjectValue
		public RuleCall getObjectValueParserRuleCall_4() { return cObjectValueParserRuleCall_4; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_5() { return cNumberValueParserRuleCall_5; }
		
		//ArrayValue
		public RuleCall getArrayValueParserRuleCall_6() { return cArrayValueParserRuleCall_6; }
	}
	public class ShipyardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Shipyard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShipyardAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cShipyardAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cShipyardShipyardPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cShipyardAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cShipyardAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cShipyardShipyardPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cShipyardAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Shipyard
		//Shipyard returns Shipyard:
		//    {Shipyard}
		//            //EReference is not a keyword
		//            '{'(Shipyard+=ShipyardPropertiesAbstract ( "," Shipyard+=ShipyardPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Shipyard}
		//        //EReference is not a keyword
		//        '{'(Shipyard+=ShipyardPropertiesAbstract ( "," Shipyard+=ShipyardPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Shipyard}
		public Action getShipyardAction_0() { return cShipyardAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Shipyard+=ShipyardPropertiesAbstract ( "," Shipyard+=ShipyardPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Shipyard+=ShipyardPropertiesAbstract
		public Assignment getShipyardAssignment_2_0() { return cShipyardAssignment_2_0; }
		
		//ShipyardPropertiesAbstract
		public RuleCall getShipyardShipyardPropertiesAbstractParserRuleCall_2_0_0() { return cShipyardShipyardPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Shipyard+=ShipyardPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Shipyard+=ShipyardPropertiesAbstract
		public Assignment getShipyardAssignment_2_1_1() { return cShipyardAssignment_2_1_1; }
		
		//ShipyardPropertiesAbstract
		public RuleCall getShipyardShipyardPropertiesAbstractParserRuleCall_2_1_1_0() { return cShipyardShipyardPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ShipyardApiVersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardApiVersion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApiVersionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cApiVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cApiVersionEStringParserRuleCall_2_0 = (RuleCall)cApiVersionAssignment_2.eContents().get(0);
		
		////EClass ShipyardApiVersion
		//ShipyardApiVersion returns ShipyardApiVersion:
		//        //Keywords
		//        '"apiVersion"' ':'
		//        apiVersion=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"apiVersion"' ':'
		//apiVersion=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"apiVersion"'
		public Keyword getApiVersionKeyword_0() { return cApiVersionKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//apiVersion=EString
		public Assignment getApiVersionAssignment_2() { return cApiVersionAssignment_2; }
		
		//EString
		public RuleCall getApiVersionEStringParserRuleCall_2_0() { return cApiVersionEStringParserRuleCall_2_0; }
	}
	public class ShipyardKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardKind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKindKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKindEStringParserRuleCall_2_0 = (RuleCall)cKindAssignment_2.eContents().get(0);
		
		////EClass ShipyardKind
		//ShipyardKind returns ShipyardKind:
		//        //Keywords
		//        '"kind"' ':'
		//        kind=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"kind"' ':'
		//kind=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"kind"'
		public Keyword getKindKeyword_0() { return cKindKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//kind=EString
		public Assignment getKindAssignment_2() { return cKindAssignment_2; }
		
		//EString
		public RuleCall getKindEStringParserRuleCall_2_0() { return cKindEStringParserRuleCall_2_0; }
	}
	public class ShipyardMetadataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardMetadata");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMetadataAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMetadataMetadataParserRuleCall_2_0 = (RuleCall)cMetadataAssignment_2.eContents().get(0);
		
		////EClass ShipyardMetadata
		//ShipyardMetadata returns ShipyardMetadata:
		//            //Keywords
		//            '"metadata"' ':'
		//            metadata=Metadata
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"metadata"' ':'
		//metadata=Metadata
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"metadata"'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//metadata=Metadata
		public Assignment getMetadataAssignment_2() { return cMetadataAssignment_2; }
		
		//Metadata
		public RuleCall getMetadataMetadataParserRuleCall_2_0() { return cMetadataMetadataParserRuleCall_2_0; }
	}
	public class ShipyardSpec1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardSpec1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSpecAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSpecShipyardSpecParserRuleCall_2_0 = (RuleCall)cSpecAssignment_2.eContents().get(0);
		
		////EClass ShipyardSpec1
		//ShipyardSpec1 returns ShipyardSpec1:
		//            //Keywords
		//            '"spec"' ':'
		//            spec=ShipyardSpec
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"spec"' ':'
		//spec=ShipyardSpec
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"spec"'
		public Keyword getSpecKeyword_0() { return cSpecKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//spec=ShipyardSpec
		public Assignment getSpecAssignment_2() { return cSpecAssignment_2; }
		
		//ShipyardSpec
		public RuleCall getSpecShipyardSpecParserRuleCall_2_0() { return cSpecShipyardSpecParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class MetadataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Metadata");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetadataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cMetadataAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cMetadataMetadataPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cMetadataAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cMetadataAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cMetadataMetadataPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cMetadataAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Metadata
		//Metadata returns Metadata:
		//    {Metadata}
		//            //EReference is not a keyword
		//            '{'(Metadata+=MetadataPropertiesAbstract ( "," Metadata+=MetadataPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Metadata}
		//        //EReference is not a keyword
		//        '{'(Metadata+=MetadataPropertiesAbstract ( "," Metadata+=MetadataPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Metadata}
		public Action getMetadataAction_0() { return cMetadataAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Metadata+=MetadataPropertiesAbstract ( "," Metadata+=MetadataPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Metadata+=MetadataPropertiesAbstract
		public Assignment getMetadataAssignment_2_0() { return cMetadataAssignment_2_0; }
		
		//MetadataPropertiesAbstract
		public RuleCall getMetadataMetadataPropertiesAbstractParserRuleCall_2_0_0() { return cMetadataMetadataPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Metadata+=MetadataPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Metadata+=MetadataPropertiesAbstract
		public Assignment getMetadataAssignment_2_1_1() { return cMetadataAssignment_2_1_1; }
		
		//MetadataPropertiesAbstract
		public RuleCall getMetadataMetadataPropertiesAbstractParserRuleCall_2_1_1_0() { return cMetadataMetadataPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class MetadataNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.MetadataName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetadataNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass MetadataName
		//MetadataName returns MetadataName:
		//    {MetadataName}
		//    //Keyword?s Name
		//    //Keywords
		//    '"name"' ':'
		//    name=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{MetadataName}
		////Keyword?s Name
		////Keywords
		//'"name"' ':'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{MetadataName}
		public Action getMetadataNameAction_0() { return cMetadataNameAction_0; }
		
		////Keyword?s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class ShipyardSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardSpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShipyardSpecAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cShipyardSpecAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cShipyardSpecAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cShipyardSpecAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cShipyardSpecAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ShipyardSpec
		//ShipyardSpec returns ShipyardSpec:
		//    {ShipyardSpec}
		//            //EReference is not a keyword
		//            '{'(ShipyardSpec+=ShipyardSpecPropertiesAbstract ( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ShipyardSpec}
		//        //EReference is not a keyword
		//        '{'(ShipyardSpec+=ShipyardSpecPropertiesAbstract ( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{ShipyardSpec}
		public Action getShipyardSpecAction_0() { return cShipyardSpecAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(ShipyardSpec+=ShipyardSpecPropertiesAbstract ( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//ShipyardSpec+=ShipyardSpecPropertiesAbstract
		public Assignment getShipyardSpecAssignment_2_0() { return cShipyardSpecAssignment_2_0; }
		
		//ShipyardSpecPropertiesAbstract
		public RuleCall getShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_0_0() { return cShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//ShipyardSpec+=ShipyardSpecPropertiesAbstract
		public Assignment getShipyardSpecAssignment_2_1_1() { return cShipyardSpecAssignment_2_1_1; }
		
		//ShipyardSpecPropertiesAbstract
		public RuleCall getShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_1_1_0() { return cShipyardSpecShipyardSpecPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ShipyardSpecStagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardSpecStages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShipyardSpecStagesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStagesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cStagesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cStagesShipyardSpecStagesItemsParserRuleCall_4_0_0 = (RuleCall)cStagesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cStagesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cStagesShipyardSpecStagesItemsParserRuleCall_4_1_1_0 = (RuleCall)cStagesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ShipyardSpecStages
		//ShipyardSpecStages returns ShipyardSpecStages:
		//    {ShipyardSpecStages}
		//            //Keywords
		//            '"stages"' ':'
		//            '['(stages+=ShipyardSpecStagesItems ( "," stages+=ShipyardSpecStagesItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ShipyardSpecStages}
		//        //Keywords
		//        '"stages"' ':'
		//        '['(stages+=ShipyardSpecStagesItems ( "," stages+=ShipyardSpecStagesItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{ShipyardSpecStages}
		public Action getShipyardSpecStagesAction_0() { return cShipyardSpecStagesAction_0; }
		
		////Keywords
		//'"stages"'
		public Keyword getStagesKeyword_1() { return cStagesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(stages+=ShipyardSpecStagesItems ( "," stages+=ShipyardSpecStagesItems)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//stages+=ShipyardSpecStagesItems
		public Assignment getStagesAssignment_4_0() { return cStagesAssignment_4_0; }
		
		//ShipyardSpecStagesItems
		public RuleCall getStagesShipyardSpecStagesItemsParserRuleCall_4_0_0() { return cStagesShipyardSpecStagesItemsParserRuleCall_4_0_0; }
		
		//( "," stages+=ShipyardSpecStagesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//stages+=ShipyardSpecStagesItems
		public Assignment getStagesAssignment_4_1_1() { return cStagesAssignment_4_1_1; }
		
		//ShipyardSpecStagesItems
		public RuleCall getStagesShipyardSpecStagesItemsParserRuleCall_4_1_1_0() { return cStagesShipyardSpecStagesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ShipyardSpecStagesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ShipyardSpecStagesItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsStageParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ShipyardSpecStagesItems
		//ShipyardSpecStagesItems returns ShipyardSpecStagesItems:
		//            //EReference is not a keyword
		//            items=Stage
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=Stage
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//Stage
		public RuleCall getItemsStageParserRuleCall_0() { return cItemsStageParserRuleCall_0; }
	}
	public class StageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Stage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cStageAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cStageStagePropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cStageAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cStageAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cStageStagePropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cStageAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Stage
		//Stage returns Stage:
		//    {Stage}
		//            //EReference is not a keyword
		//            '{'(Stage+=StagePropertiesAbstract ( "," Stage+=StagePropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Stage}
		//        //EReference is not a keyword
		//        '{'(Stage+=StagePropertiesAbstract ( "," Stage+=StagePropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Stage}
		public Action getStageAction_0() { return cStageAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Stage+=StagePropertiesAbstract ( "," Stage+=StagePropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Stage+=StagePropertiesAbstract
		public Assignment getStageAssignment_2_0() { return cStageAssignment_2_0; }
		
		//StagePropertiesAbstract
		public RuleCall getStageStagePropertiesAbstractParserRuleCall_2_0_0() { return cStageStagePropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Stage+=StagePropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Stage+=StagePropertiesAbstract
		public Assignment getStageAssignment_2_1_1() { return cStageAssignment_2_1_1; }
		
		//StagePropertiesAbstract
		public RuleCall getStageStagePropertiesAbstractParserRuleCall_2_1_1_0() { return cStageStagePropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class StageNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.StageName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStageNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass StageName
		//StageName returns StageName:
		//    {StageName}
		//    //Keyword?s Name
		//    //Keywords
		//    '"name"' ':'
		//    name=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{StageName}
		////Keyword?s Name
		////Keywords
		//'"name"' ':'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{StageName}
		public Action getStageNameAction_0() { return cStageNameAction_0; }
		
		////Keyword?s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class StageSequencesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.StageSequences");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStageSequencesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSequencesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cSequencesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cSequencesStageSequencesItemsParserRuleCall_4_0_0 = (RuleCall)cSequencesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cSequencesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cSequencesStageSequencesItemsParserRuleCall_4_1_1_0 = (RuleCall)cSequencesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass StageSequences
		//StageSequences returns StageSequences:
		//    {StageSequences}
		//            //Keywords
		//            '"sequences"' ':'
		//            '['(sequences+=StageSequencesItems ( "," sequences+=StageSequencesItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{StageSequences}
		//        //Keywords
		//        '"sequences"' ':'
		//        '['(sequences+=StageSequencesItems ( "," sequences+=StageSequencesItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{StageSequences}
		public Action getStageSequencesAction_0() { return cStageSequencesAction_0; }
		
		////Keywords
		//'"sequences"'
		public Keyword getSequencesKeyword_1() { return cSequencesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(sequences+=StageSequencesItems ( "," sequences+=StageSequencesItems)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//sequences+=StageSequencesItems
		public Assignment getSequencesAssignment_4_0() { return cSequencesAssignment_4_0; }
		
		//StageSequencesItems
		public RuleCall getSequencesStageSequencesItemsParserRuleCall_4_0_0() { return cSequencesStageSequencesItemsParserRuleCall_4_0_0; }
		
		//( "," sequences+=StageSequencesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//sequences+=StageSequencesItems
		public Assignment getSequencesAssignment_4_1_1() { return cSequencesAssignment_4_1_1; }
		
		//StageSequencesItems
		public RuleCall getSequencesStageSequencesItemsParserRuleCall_4_1_1_0() { return cSequencesStageSequencesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class StageSequencesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.StageSequencesItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsSequenceParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass StageSequencesItems
		//StageSequencesItems returns StageSequencesItems:
		//            //EReference is not a keyword
		//            items=Sequence
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=Sequence
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//Sequence
		public RuleCall getItemsSequenceParserRuleCall_0() { return cItemsSequenceParserRuleCall_0; }
	}
	public class SequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Sequence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cSequenceAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cSequenceSequencePropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cSequenceAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSequenceAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSequenceSequencePropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cSequenceAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Sequence
		//Sequence returns Sequence:
		//    {Sequence}
		//            //EReference is not a keyword
		//            '{'(Sequence+=SequencePropertiesAbstract ( "," Sequence+=SequencePropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Sequence}
		//        //EReference is not a keyword
		//        '{'(Sequence+=SequencePropertiesAbstract ( "," Sequence+=SequencePropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Sequence}
		public Action getSequenceAction_0() { return cSequenceAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Sequence+=SequencePropertiesAbstract ( "," Sequence+=SequencePropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Sequence+=SequencePropertiesAbstract
		public Assignment getSequenceAssignment_2_0() { return cSequenceAssignment_2_0; }
		
		//SequencePropertiesAbstract
		public RuleCall getSequenceSequencePropertiesAbstractParserRuleCall_2_0_0() { return cSequenceSequencePropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Sequence+=SequencePropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Sequence+=SequencePropertiesAbstract
		public Assignment getSequenceAssignment_2_1_1() { return cSequenceAssignment_2_1_1; }
		
		//SequencePropertiesAbstract
		public RuleCall getSequenceSequencePropertiesAbstractParserRuleCall_2_1_1_0() { return cSequenceSequencePropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SequenceNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequenceName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass SequenceName
		//SequenceName returns SequenceName:
		//    {SequenceName}
		//    //Keyword?s Name
		//    //Keywords
		//    '"name"' ':'
		//    name=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SequenceName}
		////Keyword?s Name
		////Keywords
		//'"name"' ':'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{SequenceName}
		public Action getSequenceNameAction_0() { return cSequenceNameAction_0; }
		
		////Keyword?s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class SequenceTriggeredOnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequenceTriggeredOn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceTriggeredOnAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTriggeredOnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cTriggeredOnAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_0_0 = (RuleCall)cTriggeredOnAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cTriggeredOnAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_1_1_0 = (RuleCall)cTriggeredOnAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass SequenceTriggeredOn
		//SequenceTriggeredOn returns SequenceTriggeredOn:
		//    {SequenceTriggeredOn}
		//            //Keywords
		//            '"triggeredOn"' ':'
		//            '['(triggeredOn+=SequenceTriggeredOnItems ( "," triggeredOn+=SequenceTriggeredOnItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SequenceTriggeredOn}
		//        //Keywords
		//        '"triggeredOn"' ':'
		//        '['(triggeredOn+=SequenceTriggeredOnItems ( "," triggeredOn+=SequenceTriggeredOnItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{SequenceTriggeredOn}
		public Action getSequenceTriggeredOnAction_0() { return cSequenceTriggeredOnAction_0; }
		
		////Keywords
		//'"triggeredOn"'
		public Keyword getTriggeredOnKeyword_1() { return cTriggeredOnKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(triggeredOn+=SequenceTriggeredOnItems ( "," triggeredOn+=SequenceTriggeredOnItems)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//triggeredOn+=SequenceTriggeredOnItems
		public Assignment getTriggeredOnAssignment_4_0() { return cTriggeredOnAssignment_4_0; }
		
		//SequenceTriggeredOnItems
		public RuleCall getTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_0_0() { return cTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_0_0; }
		
		//( "," triggeredOn+=SequenceTriggeredOnItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//triggeredOn+=SequenceTriggeredOnItems
		public Assignment getTriggeredOnAssignment_4_1_1() { return cTriggeredOnAssignment_4_1_1; }
		
		//SequenceTriggeredOnItems
		public RuleCall getTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_1_1_0() { return cTriggeredOnSequenceTriggeredOnItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class SequenceTasksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequenceTasks");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceTasksAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTasksKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cTasksAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cTasksSequenceTasksItemsParserRuleCall_4_0_0 = (RuleCall)cTasksAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cTasksAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cTasksSequenceTasksItemsParserRuleCall_4_1_1_0 = (RuleCall)cTasksAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass SequenceTasks
		//SequenceTasks returns SequenceTasks:
		//    {SequenceTasks}
		//            //Keywords
		//            '"tasks"' ':'
		//            '['(tasks+=SequenceTasksItems ( "," tasks+=SequenceTasksItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SequenceTasks}
		//        //Keywords
		//        '"tasks"' ':'
		//        '['(tasks+=SequenceTasksItems ( "," tasks+=SequenceTasksItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{SequenceTasks}
		public Action getSequenceTasksAction_0() { return cSequenceTasksAction_0; }
		
		////Keywords
		//'"tasks"'
		public Keyword getTasksKeyword_1() { return cTasksKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(tasks+=SequenceTasksItems ( "," tasks+=SequenceTasksItems)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//tasks+=SequenceTasksItems
		public Assignment getTasksAssignment_4_0() { return cTasksAssignment_4_0; }
		
		//SequenceTasksItems
		public RuleCall getTasksSequenceTasksItemsParserRuleCall_4_0_0() { return cTasksSequenceTasksItemsParserRuleCall_4_0_0; }
		
		//( "," tasks+=SequenceTasksItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//tasks+=SequenceTasksItems
		public Assignment getTasksAssignment_4_1_1() { return cTasksAssignment_4_1_1; }
		
		//SequenceTasksItems
		public RuleCall getTasksSequenceTasksItemsParserRuleCall_4_1_1_0() { return cTasksSequenceTasksItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class SequenceTriggeredOnItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequenceTriggeredOnItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsTriggerParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass SequenceTriggeredOnItems
		//SequenceTriggeredOnItems returns SequenceTriggeredOnItems:
		//            //EReference is not a keyword
		//            items=Trigger
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=Trigger
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//Trigger
		public RuleCall getItemsTriggerParserRuleCall_0() { return cItemsTriggerParserRuleCall_0; }
	}
	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Trigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTriggerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTriggerAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTriggerTriggerPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cTriggerAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTriggerAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cTriggerTriggerPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cTriggerAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Trigger
		//Trigger returns Trigger:
		//    {Trigger}
		//            //EReference is not a keyword
		//            '{'(Trigger+=TriggerPropertiesAbstract ( "," Trigger+=TriggerPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Trigger}
		//        //EReference is not a keyword
		//        '{'(Trigger+=TriggerPropertiesAbstract ( "," Trigger+=TriggerPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Trigger}
		public Action getTriggerAction_0() { return cTriggerAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Trigger+=TriggerPropertiesAbstract ( "," Trigger+=TriggerPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Trigger+=TriggerPropertiesAbstract
		public Assignment getTriggerAssignment_2_0() { return cTriggerAssignment_2_0; }
		
		//TriggerPropertiesAbstract
		public RuleCall getTriggerTriggerPropertiesAbstractParserRuleCall_2_0_0() { return cTriggerTriggerPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Trigger+=TriggerPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Trigger+=TriggerPropertiesAbstract
		public Assignment getTriggerAssignment_2_1_1() { return cTriggerAssignment_2_1_1; }
		
		//TriggerPropertiesAbstract
		public RuleCall getTriggerTriggerPropertiesAbstractParserRuleCall_2_1_1_0() { return cTriggerTriggerPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class TriggerEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TriggerEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventEStringParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		
		////EClass TriggerEvent
		//TriggerEvent returns TriggerEvent:
		//        //Keywords
		//        '"event"' ':'
		//        event=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"event"' ':'
		//event=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"event"'
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//event=EString
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//EString
		public RuleCall getEventEStringParserRuleCall_2_0() { return cEventEStringParserRuleCall_2_0; }
	}
	public class TriggerSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TriggerSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSelectorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSelectorSelectorParserRuleCall_2_0 = (RuleCall)cSelectorAssignment_2.eContents().get(0);
		
		////EClass TriggerSelector
		//TriggerSelector returns TriggerSelector:
		//            //Keywords
		//            '"selector"' ':'
		//            selector=Selector
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"selector"' ':'
		//selector=Selector
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"selector"'
		public Keyword getSelectorKeyword_0() { return cSelectorKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//selector=Selector
		public Assignment getSelectorAssignment_2() { return cSelectorAssignment_2; }
		
		//Selector
		public RuleCall getSelectorSelectorParserRuleCall_2_0() { return cSelectorSelectorParserRuleCall_2_0; }
	}
	public class SelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Selector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSelectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cSelectorAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cSelectorSelectorPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cSelectorAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSelectorAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSelectorSelectorPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cSelectorAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Selector
		//Selector returns Selector:
		//    {Selector}
		//            //EReference is not a keyword
		//            '{'(Selector+=SelectorPropertiesAbstract ( "," Selector+=SelectorPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Selector}
		//        //EReference is not a keyword
		//        '{'(Selector+=SelectorPropertiesAbstract ( "," Selector+=SelectorPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Selector}
		public Action getSelectorAction_0() { return cSelectorAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Selector+=SelectorPropertiesAbstract ( "," Selector+=SelectorPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Selector+=SelectorPropertiesAbstract
		public Assignment getSelectorAssignment_2_0() { return cSelectorAssignment_2_0; }
		
		//SelectorPropertiesAbstract
		public RuleCall getSelectorSelectorPropertiesAbstractParserRuleCall_2_0_0() { return cSelectorSelectorPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Selector+=SelectorPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Selector+=SelectorPropertiesAbstract
		public Assignment getSelectorAssignment_2_1_1() { return cSelectorAssignment_2_1_1; }
		
		//SelectorPropertiesAbstract
		public RuleCall getSelectorSelectorPropertiesAbstractParserRuleCall_2_1_1_0() { return cSelectorSelectorPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SelectorMatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SelectorMatch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSelectorMatchAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMatchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cMatchAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cMatchSelectorMatchPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cMatchAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cMatchAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cMatchSelectorMatchPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cMatchAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass SelectorMatch
		//SelectorMatch returns SelectorMatch:
		//    {SelectorMatch}
		//            //Keywords
		//            '"match"' ':'
		//            '{'(match+=SelectorMatchPropertiesAbstract ( "," match+=SelectorMatchPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SelectorMatch}
		//        //Keywords
		//        '"match"' ':'
		//        '{'(match+=SelectorMatchPropertiesAbstract ( "," match+=SelectorMatchPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{SelectorMatch}
		public Action getSelectorMatchAction_0() { return cSelectorMatchAction_0; }
		
		////Keywords
		//'"match"'
		public Keyword getMatchKeyword_1() { return cMatchKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(match+=SelectorMatchPropertiesAbstract ( "," match+=SelectorMatchPropertiesAbstract)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//match+=SelectorMatchPropertiesAbstract
		public Assignment getMatchAssignment_4_0() { return cMatchAssignment_4_0; }
		
		//SelectorMatchPropertiesAbstract
		public RuleCall getMatchSelectorMatchPropertiesAbstractParserRuleCall_4_0_0() { return cMatchSelectorMatchPropertiesAbstractParserRuleCall_4_0_0; }
		
		//( "," match+=SelectorMatchPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//match+=SelectorMatchPropertiesAbstract
		public Assignment getMatchAssignment_4_1_1() { return cMatchAssignment_4_1_1; }
		
		//SelectorMatchPropertiesAbstract
		public RuleCall getMatchSelectorMatchPropertiesAbstractParserRuleCall_4_1_1_0() { return cMatchSelectorMatchPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SelectorMatchPatternProperties0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SelectorMatchPatternProperties0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPatternProperties0Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPatternProperties0EStringParserRuleCall_2_0 = (RuleCall)cPatternProperties0Assignment_2.eContents().get(0);
		
		////EClass SelectorMatchPatternProperties0
		//SelectorMatchPatternProperties0 returns SelectorMatchPatternProperties0:
		//        //KeyValue
		//        key=EString
		//        ':'
		//        patternProperties0=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		//patternProperties0=EString
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//patternProperties0=EString
		public Assignment getPatternProperties0Assignment_2() { return cPatternProperties0Assignment_2; }
		
		//EString
		public RuleCall getPatternProperties0EStringParserRuleCall_2_0() { return cPatternProperties0EStringParserRuleCall_2_0; }
	}
	public class SequenceTasksItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.SequenceTasksItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsTaskParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass SequenceTasksItems
		//SequenceTasksItems returns SequenceTasksItems:
		//            //EReference is not a keyword
		//            items=Task
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=Task
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//Task
		public RuleCall getItemsTaskParserRuleCall_0() { return cItemsTaskParserRuleCall_0; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTaskAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTaskAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTaskTaskPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cTaskAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTaskAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cTaskTaskPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cTaskAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Task
		//Task returns Task:
		//    {Task}
		//            //EReference is not a keyword
		//            '{'(Task+=TaskPropertiesAbstract ( "," Task+=TaskPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Task}
		//        //EReference is not a keyword
		//        '{'(Task+=TaskPropertiesAbstract ( "," Task+=TaskPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Task}
		public Action getTaskAction_0() { return cTaskAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(Task+=TaskPropertiesAbstract ( "," Task+=TaskPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Task+=TaskPropertiesAbstract
		public Assignment getTaskAssignment_2_0() { return cTaskAssignment_2_0; }
		
		//TaskPropertiesAbstract
		public RuleCall getTaskTaskPropertiesAbstractParserRuleCall_2_0_0() { return cTaskTaskPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," Task+=TaskPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//Task+=TaskPropertiesAbstract
		public Assignment getTaskAssignment_2_1_1() { return cTaskAssignment_2_1_1; }
		
		//TaskPropertiesAbstract
		public RuleCall getTaskTaskPropertiesAbstractParserRuleCall_2_1_1_0() { return cTaskTaskPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class TaskNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TaskName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTaskNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass TaskName
		//TaskName returns TaskName:
		//    {TaskName}
		//    //Keyword?s Name
		//    //Keywords
		//    '"name"' ':'
		//    name=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{TaskName}
		////Keyword?s Name
		////Keywords
		//'"name"' ':'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{TaskName}
		public Action getTaskNameAction_0() { return cTaskNameAction_0; }
		
		////Keyword?s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class TaskPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TaskProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTaskPropertiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPropertiesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cPropertiesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cPropertiesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cPropertiesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass TaskProperties
		//TaskProperties returns TaskProperties:
		//    {TaskProperties}
		//            //Keywords
		//            '"properties"' ':'
		//            '{'(properties+=TaskPropertiesPropertiesAbstract ( "," properties+=TaskPropertiesPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{TaskProperties}
		//        //Keywords
		//        '"properties"' ':'
		//        '{'(properties+=TaskPropertiesPropertiesAbstract ( "," properties+=TaskPropertiesPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{TaskProperties}
		public Action getTaskPropertiesAction_0() { return cTaskPropertiesAction_0; }
		
		////Keywords
		//'"properties"'
		public Keyword getPropertiesKeyword_1() { return cPropertiesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(properties+=TaskPropertiesPropertiesAbstract ( "," properties+=TaskPropertiesPropertiesAbstract)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//properties+=TaskPropertiesPropertiesAbstract
		public Assignment getPropertiesAssignment_4_0() { return cPropertiesAssignment_4_0; }
		
		//TaskPropertiesPropertiesAbstract
		public RuleCall getPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_0_0() { return cPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_0_0; }
		
		//( "," properties+=TaskPropertiesPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//properties+=TaskPropertiesPropertiesAbstract
		public Assignment getPropertiesAssignment_4_1_1() { return cPropertiesAssignment_4_1_1; }
		
		//TaskPropertiesPropertiesAbstract
		public RuleCall getPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_1_1_0() { return cPropertiesTaskPropertiesPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TaskPropertiesAdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.TaskPropertiesAdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass TaskPropertiesAdditionalProperties
		//TaskPropertiesAdditionalProperties returns TaskPropertiesAdditionalProperties:
		//        //KeyValue
		//        key=EString
		//        ':'
		//            //EReference is not a keyword
		//            additionalProperties=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		//    //EReference is not a keyword
		//    additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class JsonDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.JsonDocument");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass JsonDocument
		//JsonDocument returns jsonMetaschemaMM::JsonDocument:
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_0() { return cValueValueParserRuleCall_0; }
	}
	public class IntegerValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.IntegerValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEIntParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass IntegerValue
		//IntegerValue returns jsonMetaschemaMM::IntegerValue:
		//        value=EInt
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EInt
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_0() { return cValueEIntParserRuleCall_0; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueValueKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////EClass BooleanValue
		//BooleanValue returns jsonMetaschemaMM::BooleanValue:
		//    value?='value'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value?='value'
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//'value'
		public Keyword getValueValueKeyword_0() { return cValueValueKeyword_0; }
	}
	public class NullValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.NullValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNullEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NullValue
		//NullValue returns jsonMetaschemaMM::NullValue:
		//        value=NullEnum
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NullEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NullEnum
		public RuleCall getValueNullEnumEnumRuleCall_0() { return cValueNullEnumEnumRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass StringValue
		//StringValue returns jsonMetaschemaMM::StringValue:
		//        value=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ObjectValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cKeyvaluepairAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_0_0 = (RuleCall)cKeyvaluepairAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyvaluepairAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cKeyvaluepairAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ObjectValue
		//ObjectValue returns jsonMetaschemaMM::ObjectValue:
		//    {jsonMetaschemaMM::ObjectValue}
		//    '{'
		//            //EReference is not a keyword
		//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMetaschemaMM::ObjectValue}
		//'{'
		//        //EReference is not a keyword
		//        (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{jsonMetaschemaMM::ObjectValue}
		public Action getObjectValueAction_0() { return cObjectValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		////EReference is not a keyword
		//(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_0() { return cKeyvaluepairAssignment_2_0; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_0_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_0_0; }
		
		//( "," keyvaluepair+=KeyValuePair)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_1_1() { return cKeyvaluepairAssignment_2_1_1; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NumberValue
		//NumberValue returns jsonMetaschemaMM::NumberValue:
		//        value=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EDouble
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_0() { return cValueEDoubleParserRuleCall_0; }
	}
	public class ArrayValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.ArrayValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArrayValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ArrayValue
		//ArrayValue returns jsonMetaschemaMM::ArrayValue:
		//    {jsonMetaschemaMM::ArrayValue}
		//            //EReference is not a keyword
		//            '['(value+=Value ( "," value+=Value)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMetaschemaMM::ArrayValue}
		//        //EReference is not a keyword
		//        '['(value+=Value ( "," value+=Value)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{jsonMetaschemaMM::ArrayValue}
		public Action getArrayValueAction_0() { return cArrayValueAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(value+=Value ( "," value+=Value)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//value+=Value
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0_0() { return cValueValueParserRuleCall_2_0_0; }
		
		//( "," value+=Value)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//value+=Value
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_1_1_0() { return cValueValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class KeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.KeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////EClass KeyValuePair
		//KeyValuePair returns jsonMetaschemaMM::KeyValuePair:
		//        //KeyValue
		//        key=EString
		//        ':'
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		//    //EReference is not a keyword
		//    value=Value
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	
	public class NullEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "at.jku.bise.shipyardV4.ShipyardV4.NullEnum");
		private final EnumLiteralDeclaration cNullEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullEnumLiteralDeclaration.eContents().get(0);
		
		//enum NullEnum returns jsonMetaschemaMM::NullEnum:
		//                null = 'null';
		public EnumRule getRule() { return rule; }
		
		//null = 'null'
		public EnumLiteralDeclaration getNullEnumLiteralDeclaration() { return cNullEnumLiteralDeclaration; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	
	private final ShipyardV4RootElements pShipyardV4Root;
	private final ShipyardPropertiesAbstractElements pShipyardPropertiesAbstract;
	private final MetadataPropertiesAbstractElements pMetadataPropertiesAbstract;
	private final ShipyardSpecPropertiesAbstractElements pShipyardSpecPropertiesAbstract;
	private final StagePropertiesAbstractElements pStagePropertiesAbstract;
	private final SequencePropertiesAbstractElements pSequencePropertiesAbstract;
	private final TriggerPropertiesAbstractElements pTriggerPropertiesAbstract;
	private final SelectorPropertiesAbstractElements pSelectorPropertiesAbstract;
	private final SelectorMatchPropertiesAbstractElements pSelectorMatchPropertiesAbstract;
	private final TaskPropertiesAbstractElements pTaskPropertiesAbstract;
	private final TaskPropertiesPropertiesAbstractElements pTaskPropertiesPropertiesAbstract;
	private final ValueElements pValue;
	private final ShipyardElements pShipyard;
	private final ShipyardApiVersionElements pShipyardApiVersion;
	private final ShipyardKindElements pShipyardKind;
	private final ShipyardMetadataElements pShipyardMetadata;
	private final ShipyardSpec1Elements pShipyardSpec1;
	private final EStringElements pEString;
	private final MetadataElements pMetadata;
	private final MetadataNameElements pMetadataName;
	private final ShipyardSpecElements pShipyardSpec;
	private final ShipyardSpecStagesElements pShipyardSpecStages;
	private final ShipyardSpecStagesItemsElements pShipyardSpecStagesItems;
	private final StageElements pStage;
	private final StageNameElements pStageName;
	private final StageSequencesElements pStageSequences;
	private final StageSequencesItemsElements pStageSequencesItems;
	private final SequenceElements pSequence;
	private final SequenceNameElements pSequenceName;
	private final SequenceTriggeredOnElements pSequenceTriggeredOn;
	private final SequenceTasksElements pSequenceTasks;
	private final SequenceTriggeredOnItemsElements pSequenceTriggeredOnItems;
	private final TriggerElements pTrigger;
	private final TriggerEventElements pTriggerEvent;
	private final TriggerSelectorElements pTriggerSelector;
	private final SelectorElements pSelector;
	private final SelectorMatchElements pSelectorMatch;
	private final SelectorMatchPatternProperties0Elements pSelectorMatchPatternProperties0;
	private final SequenceTasksItemsElements pSequenceTasksItems;
	private final TaskElements pTask;
	private final TaskNameElements pTaskName;
	private final TaskPropertiesElements pTaskProperties;
	private final TaskPropertiesAdditionalPropertiesElements pTaskPropertiesAdditionalProperties;
	private final JsonDocumentElements pJsonDocument;
	private final IntegerValueElements pIntegerValue;
	private final BooleanValueElements pBooleanValue;
	private final NullValueElements pNullValue;
	private final StringValueElements pStringValue;
	private final ObjectValueElements pObjectValue;
	private final NumberValueElements pNumberValue;
	private final ArrayValueElements pArrayValue;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final NullEnumElements eNullEnum;
	private final KeyValuePairElements pKeyValuePair;
	private final EDoubleElements pEDouble;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ShipyardV4GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pShipyardV4Root = new ShipyardV4RootElements();
		this.pShipyardPropertiesAbstract = new ShipyardPropertiesAbstractElements();
		this.pMetadataPropertiesAbstract = new MetadataPropertiesAbstractElements();
		this.pShipyardSpecPropertiesAbstract = new ShipyardSpecPropertiesAbstractElements();
		this.pStagePropertiesAbstract = new StagePropertiesAbstractElements();
		this.pSequencePropertiesAbstract = new SequencePropertiesAbstractElements();
		this.pTriggerPropertiesAbstract = new TriggerPropertiesAbstractElements();
		this.pSelectorPropertiesAbstract = new SelectorPropertiesAbstractElements();
		this.pSelectorMatchPropertiesAbstract = new SelectorMatchPropertiesAbstractElements();
		this.pTaskPropertiesAbstract = new TaskPropertiesAbstractElements();
		this.pTaskPropertiesPropertiesAbstract = new TaskPropertiesPropertiesAbstractElements();
		this.pValue = new ValueElements();
		this.pShipyard = new ShipyardElements();
		this.pShipyardApiVersion = new ShipyardApiVersionElements();
		this.pShipyardKind = new ShipyardKindElements();
		this.pShipyardMetadata = new ShipyardMetadataElements();
		this.pShipyardSpec1 = new ShipyardSpec1Elements();
		this.pEString = new EStringElements();
		this.pMetadata = new MetadataElements();
		this.pMetadataName = new MetadataNameElements();
		this.pShipyardSpec = new ShipyardSpecElements();
		this.pShipyardSpecStages = new ShipyardSpecStagesElements();
		this.pShipyardSpecStagesItems = new ShipyardSpecStagesItemsElements();
		this.pStage = new StageElements();
		this.pStageName = new StageNameElements();
		this.pStageSequences = new StageSequencesElements();
		this.pStageSequencesItems = new StageSequencesItemsElements();
		this.pSequence = new SequenceElements();
		this.pSequenceName = new SequenceNameElements();
		this.pSequenceTriggeredOn = new SequenceTriggeredOnElements();
		this.pSequenceTasks = new SequenceTasksElements();
		this.pSequenceTriggeredOnItems = new SequenceTriggeredOnItemsElements();
		this.pTrigger = new TriggerElements();
		this.pTriggerEvent = new TriggerEventElements();
		this.pTriggerSelector = new TriggerSelectorElements();
		this.pSelector = new SelectorElements();
		this.pSelectorMatch = new SelectorMatchElements();
		this.pSelectorMatchPatternProperties0 = new SelectorMatchPatternProperties0Elements();
		this.pSequenceTasksItems = new SequenceTasksItemsElements();
		this.pTask = new TaskElements();
		this.pTaskName = new TaskNameElements();
		this.pTaskProperties = new TaskPropertiesElements();
		this.pTaskPropertiesAdditionalProperties = new TaskPropertiesAdditionalPropertiesElements();
		this.pJsonDocument = new JsonDocumentElements();
		this.pIntegerValue = new IntegerValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pNullValue = new NullValueElements();
		this.pStringValue = new StringValueElements();
		this.pObjectValue = new ObjectValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pArrayValue = new ArrayValueElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.eNullEnum = new NullEnumElements();
		this.pKeyValuePair = new KeyValuePairElements();
		this.pEDouble = new EDoubleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.jku.bise.shipyardV4.ShipyardV4".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass ShipyardV4Root
	//ShipyardV4Root returns ShipyardV4Root:
	//            //EReference is not a keyword
	//            shipyardV4Root=Shipyard
	//    ;
	public ShipyardV4RootElements getShipyardV4RootAccess() {
		return pShipyardV4Root;
	}
	
	public ParserRule getShipyardV4RootRule() {
		return getShipyardV4RootAccess().getRule();
	}
	
	//ShipyardPropertiesAbstract returns ShipyardPropertiesAbstract:
	//    ShipyardApiVersion | ShipyardKind | ShipyardMetadata | ShipyardSpec1;
	public ShipyardPropertiesAbstractElements getShipyardPropertiesAbstractAccess() {
		return pShipyardPropertiesAbstract;
	}
	
	public ParserRule getShipyardPropertiesAbstractRule() {
		return getShipyardPropertiesAbstractAccess().getRule();
	}
	
	//MetadataPropertiesAbstract returns MetadataPropertiesAbstract:
	//    MetadataName;
	public MetadataPropertiesAbstractElements getMetadataPropertiesAbstractAccess() {
		return pMetadataPropertiesAbstract;
	}
	
	public ParserRule getMetadataPropertiesAbstractRule() {
		return getMetadataPropertiesAbstractAccess().getRule();
	}
	
	//ShipyardSpecPropertiesAbstract returns ShipyardSpecPropertiesAbstract:
	//    ShipyardSpecStages;
	public ShipyardSpecPropertiesAbstractElements getShipyardSpecPropertiesAbstractAccess() {
		return pShipyardSpecPropertiesAbstract;
	}
	
	public ParserRule getShipyardSpecPropertiesAbstractRule() {
		return getShipyardSpecPropertiesAbstractAccess().getRule();
	}
	
	//StagePropertiesAbstract returns StagePropertiesAbstract:
	//    StageName | StageSequences;
	public StagePropertiesAbstractElements getStagePropertiesAbstractAccess() {
		return pStagePropertiesAbstract;
	}
	
	public ParserRule getStagePropertiesAbstractRule() {
		return getStagePropertiesAbstractAccess().getRule();
	}
	
	//SequencePropertiesAbstract returns SequencePropertiesAbstract:
	//    SequenceName | SequenceTriggeredOn | SequenceTasks;
	public SequencePropertiesAbstractElements getSequencePropertiesAbstractAccess() {
		return pSequencePropertiesAbstract;
	}
	
	public ParserRule getSequencePropertiesAbstractRule() {
		return getSequencePropertiesAbstractAccess().getRule();
	}
	
	//TriggerPropertiesAbstract returns TriggerPropertiesAbstract:
	//    TriggerEvent | TriggerSelector;
	public TriggerPropertiesAbstractElements getTriggerPropertiesAbstractAccess() {
		return pTriggerPropertiesAbstract;
	}
	
	public ParserRule getTriggerPropertiesAbstractRule() {
		return getTriggerPropertiesAbstractAccess().getRule();
	}
	
	//SelectorPropertiesAbstract returns SelectorPropertiesAbstract:
	//    SelectorMatch;
	public SelectorPropertiesAbstractElements getSelectorPropertiesAbstractAccess() {
		return pSelectorPropertiesAbstract;
	}
	
	public ParserRule getSelectorPropertiesAbstractRule() {
		return getSelectorPropertiesAbstractAccess().getRule();
	}
	
	//SelectorMatchPropertiesAbstract returns SelectorMatchPropertiesAbstract:
	//    SelectorMatchPatternProperties0;
	public SelectorMatchPropertiesAbstractElements getSelectorMatchPropertiesAbstractAccess() {
		return pSelectorMatchPropertiesAbstract;
	}
	
	public ParserRule getSelectorMatchPropertiesAbstractRule() {
		return getSelectorMatchPropertiesAbstractAccess().getRule();
	}
	
	//TaskPropertiesAbstract returns TaskPropertiesAbstract:
	//    TaskName | TaskProperties;
	public TaskPropertiesAbstractElements getTaskPropertiesAbstractAccess() {
		return pTaskPropertiesAbstract;
	}
	
	public ParserRule getTaskPropertiesAbstractRule() {
		return getTaskPropertiesAbstractAccess().getRule();
	}
	
	//TaskPropertiesPropertiesAbstract returns TaskPropertiesPropertiesAbstract:
	//    TaskPropertiesAdditionalProperties;
	public TaskPropertiesPropertiesAbstractElements getTaskPropertiesPropertiesAbstractAccess() {
		return pTaskPropertiesPropertiesAbstract;
	}
	
	public ParserRule getTaskPropertiesPropertiesAbstractRule() {
		return getTaskPropertiesPropertiesAbstractAccess().getRule();
	}
	
	//Value returns jsonMetaschemaMM::Value:
	//    IntegerValue | BooleanValue | NullValue | StringValue | ObjectValue | NumberValue | ArrayValue;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	////EClass Shipyard
	//Shipyard returns Shipyard:
	//    {Shipyard}
	//            //EReference is not a keyword
	//            '{'(Shipyard+=ShipyardPropertiesAbstract ( "," Shipyard+=ShipyardPropertiesAbstract)* )?'}'
	//    ;
	public ShipyardElements getShipyardAccess() {
		return pShipyard;
	}
	
	public ParserRule getShipyardRule() {
		return getShipyardAccess().getRule();
	}
	
	////EClass ShipyardApiVersion
	//ShipyardApiVersion returns ShipyardApiVersion:
	//        //Keywords
	//        '"apiVersion"' ':'
	//        apiVersion=EString
	//    ;
	public ShipyardApiVersionElements getShipyardApiVersionAccess() {
		return pShipyardApiVersion;
	}
	
	public ParserRule getShipyardApiVersionRule() {
		return getShipyardApiVersionAccess().getRule();
	}
	
	////EClass ShipyardKind
	//ShipyardKind returns ShipyardKind:
	//        //Keywords
	//        '"kind"' ':'
	//        kind=EString
	//    ;
	public ShipyardKindElements getShipyardKindAccess() {
		return pShipyardKind;
	}
	
	public ParserRule getShipyardKindRule() {
		return getShipyardKindAccess().getRule();
	}
	
	////EClass ShipyardMetadata
	//ShipyardMetadata returns ShipyardMetadata:
	//            //Keywords
	//            '"metadata"' ':'
	//            metadata=Metadata
	//    ;
	public ShipyardMetadataElements getShipyardMetadataAccess() {
		return pShipyardMetadata;
	}
	
	public ParserRule getShipyardMetadataRule() {
		return getShipyardMetadataAccess().getRule();
	}
	
	////EClass ShipyardSpec1
	//ShipyardSpec1 returns ShipyardSpec1:
	//            //Keywords
	//            '"spec"' ':'
	//            spec=ShipyardSpec
	//    ;
	public ShipyardSpec1Elements getShipyardSpec1Access() {
		return pShipyardSpec1;
	}
	
	public ParserRule getShipyardSpec1Rule() {
		return getShipyardSpec1Access().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////EClass Metadata
	//Metadata returns Metadata:
	//    {Metadata}
	//            //EReference is not a keyword
	//            '{'(Metadata+=MetadataPropertiesAbstract ( "," Metadata+=MetadataPropertiesAbstract)* )?'}'
	//    ;
	public MetadataElements getMetadataAccess() {
		return pMetadata;
	}
	
	public ParserRule getMetadataRule() {
		return getMetadataAccess().getRule();
	}
	
	////EClass MetadataName
	//MetadataName returns MetadataName:
	//    {MetadataName}
	//    //Keyword?s Name
	//    //Keywords
	//    '"name"' ':'
	//    name=EString
	//    ;
	public MetadataNameElements getMetadataNameAccess() {
		return pMetadataName;
	}
	
	public ParserRule getMetadataNameRule() {
		return getMetadataNameAccess().getRule();
	}
	
	////EClass ShipyardSpec
	//ShipyardSpec returns ShipyardSpec:
	//    {ShipyardSpec}
	//            //EReference is not a keyword
	//            '{'(ShipyardSpec+=ShipyardSpecPropertiesAbstract ( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)* )?'}'
	//    ;
	public ShipyardSpecElements getShipyardSpecAccess() {
		return pShipyardSpec;
	}
	
	public ParserRule getShipyardSpecRule() {
		return getShipyardSpecAccess().getRule();
	}
	
	////EClass ShipyardSpecStages
	//ShipyardSpecStages returns ShipyardSpecStages:
	//    {ShipyardSpecStages}
	//            //Keywords
	//            '"stages"' ':'
	//            '['(stages+=ShipyardSpecStagesItems ( "," stages+=ShipyardSpecStagesItems)* )?']'
	//    ;
	public ShipyardSpecStagesElements getShipyardSpecStagesAccess() {
		return pShipyardSpecStages;
	}
	
	public ParserRule getShipyardSpecStagesRule() {
		return getShipyardSpecStagesAccess().getRule();
	}
	
	////EClass ShipyardSpecStagesItems
	//ShipyardSpecStagesItems returns ShipyardSpecStagesItems:
	//            //EReference is not a keyword
	//            items=Stage
	//    ;
	public ShipyardSpecStagesItemsElements getShipyardSpecStagesItemsAccess() {
		return pShipyardSpecStagesItems;
	}
	
	public ParserRule getShipyardSpecStagesItemsRule() {
		return getShipyardSpecStagesItemsAccess().getRule();
	}
	
	////EClass Stage
	//Stage returns Stage:
	//    {Stage}
	//            //EReference is not a keyword
	//            '{'(Stage+=StagePropertiesAbstract ( "," Stage+=StagePropertiesAbstract)* )?'}'
	//    ;
	public StageElements getStageAccess() {
		return pStage;
	}
	
	public ParserRule getStageRule() {
		return getStageAccess().getRule();
	}
	
	////EClass StageName
	//StageName returns StageName:
	//    {StageName}
	//    //Keyword?s Name
	//    //Keywords
	//    '"name"' ':'
	//    name=EString
	//    ;
	public StageNameElements getStageNameAccess() {
		return pStageName;
	}
	
	public ParserRule getStageNameRule() {
		return getStageNameAccess().getRule();
	}
	
	////EClass StageSequences
	//StageSequences returns StageSequences:
	//    {StageSequences}
	//            //Keywords
	//            '"sequences"' ':'
	//            '['(sequences+=StageSequencesItems ( "," sequences+=StageSequencesItems)* )?']'
	//    ;
	public StageSequencesElements getStageSequencesAccess() {
		return pStageSequences;
	}
	
	public ParserRule getStageSequencesRule() {
		return getStageSequencesAccess().getRule();
	}
	
	////EClass StageSequencesItems
	//StageSequencesItems returns StageSequencesItems:
	//            //EReference is not a keyword
	//            items=Sequence
	//    ;
	public StageSequencesItemsElements getStageSequencesItemsAccess() {
		return pStageSequencesItems;
	}
	
	public ParserRule getStageSequencesItemsRule() {
		return getStageSequencesItemsAccess().getRule();
	}
	
	////EClass Sequence
	//Sequence returns Sequence:
	//    {Sequence}
	//            //EReference is not a keyword
	//            '{'(Sequence+=SequencePropertiesAbstract ( "," Sequence+=SequencePropertiesAbstract)* )?'}'
	//    ;
	public SequenceElements getSequenceAccess() {
		return pSequence;
	}
	
	public ParserRule getSequenceRule() {
		return getSequenceAccess().getRule();
	}
	
	////EClass SequenceName
	//SequenceName returns SequenceName:
	//    {SequenceName}
	//    //Keyword?s Name
	//    //Keywords
	//    '"name"' ':'
	//    name=EString
	//    ;
	public SequenceNameElements getSequenceNameAccess() {
		return pSequenceName;
	}
	
	public ParserRule getSequenceNameRule() {
		return getSequenceNameAccess().getRule();
	}
	
	////EClass SequenceTriggeredOn
	//SequenceTriggeredOn returns SequenceTriggeredOn:
	//    {SequenceTriggeredOn}
	//            //Keywords
	//            '"triggeredOn"' ':'
	//            '['(triggeredOn+=SequenceTriggeredOnItems ( "," triggeredOn+=SequenceTriggeredOnItems)* )?']'
	//    ;
	public SequenceTriggeredOnElements getSequenceTriggeredOnAccess() {
		return pSequenceTriggeredOn;
	}
	
	public ParserRule getSequenceTriggeredOnRule() {
		return getSequenceTriggeredOnAccess().getRule();
	}
	
	////EClass SequenceTasks
	//SequenceTasks returns SequenceTasks:
	//    {SequenceTasks}
	//            //Keywords
	//            '"tasks"' ':'
	//            '['(tasks+=SequenceTasksItems ( "," tasks+=SequenceTasksItems)* )?']'
	//    ;
	public SequenceTasksElements getSequenceTasksAccess() {
		return pSequenceTasks;
	}
	
	public ParserRule getSequenceTasksRule() {
		return getSequenceTasksAccess().getRule();
	}
	
	////EClass SequenceTriggeredOnItems
	//SequenceTriggeredOnItems returns SequenceTriggeredOnItems:
	//            //EReference is not a keyword
	//            items=Trigger
	//    ;
	public SequenceTriggeredOnItemsElements getSequenceTriggeredOnItemsAccess() {
		return pSequenceTriggeredOnItems;
	}
	
	public ParserRule getSequenceTriggeredOnItemsRule() {
		return getSequenceTriggeredOnItemsAccess().getRule();
	}
	
	////EClass Trigger
	//Trigger returns Trigger:
	//    {Trigger}
	//            //EReference is not a keyword
	//            '{'(Trigger+=TriggerPropertiesAbstract ( "," Trigger+=TriggerPropertiesAbstract)* )?'}'
	//    ;
	public TriggerElements getTriggerAccess() {
		return pTrigger;
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	////EClass TriggerEvent
	//TriggerEvent returns TriggerEvent:
	//        //Keywords
	//        '"event"' ':'
	//        event=EString
	//    ;
	public TriggerEventElements getTriggerEventAccess() {
		return pTriggerEvent;
	}
	
	public ParserRule getTriggerEventRule() {
		return getTriggerEventAccess().getRule();
	}
	
	////EClass TriggerSelector
	//TriggerSelector returns TriggerSelector:
	//            //Keywords
	//            '"selector"' ':'
	//            selector=Selector
	//    ;
	public TriggerSelectorElements getTriggerSelectorAccess() {
		return pTriggerSelector;
	}
	
	public ParserRule getTriggerSelectorRule() {
		return getTriggerSelectorAccess().getRule();
	}
	
	////EClass Selector
	//Selector returns Selector:
	//    {Selector}
	//            //EReference is not a keyword
	//            '{'(Selector+=SelectorPropertiesAbstract ( "," Selector+=SelectorPropertiesAbstract)* )?'}'
	//    ;
	public SelectorElements getSelectorAccess() {
		return pSelector;
	}
	
	public ParserRule getSelectorRule() {
		return getSelectorAccess().getRule();
	}
	
	////EClass SelectorMatch
	//SelectorMatch returns SelectorMatch:
	//    {SelectorMatch}
	//            //Keywords
	//            '"match"' ':'
	//            '{'(match+=SelectorMatchPropertiesAbstract ( "," match+=SelectorMatchPropertiesAbstract)* )?'}'
	//    ;
	public SelectorMatchElements getSelectorMatchAccess() {
		return pSelectorMatch;
	}
	
	public ParserRule getSelectorMatchRule() {
		return getSelectorMatchAccess().getRule();
	}
	
	////EClass SelectorMatchPatternProperties0
	//SelectorMatchPatternProperties0 returns SelectorMatchPatternProperties0:
	//        //KeyValue
	//        key=EString
	//        ':'
	//        patternProperties0=EString
	//    ;
	public SelectorMatchPatternProperties0Elements getSelectorMatchPatternProperties0Access() {
		return pSelectorMatchPatternProperties0;
	}
	
	public ParserRule getSelectorMatchPatternProperties0Rule() {
		return getSelectorMatchPatternProperties0Access().getRule();
	}
	
	////EClass SequenceTasksItems
	//SequenceTasksItems returns SequenceTasksItems:
	//            //EReference is not a keyword
	//            items=Task
	//    ;
	public SequenceTasksItemsElements getSequenceTasksItemsAccess() {
		return pSequenceTasksItems;
	}
	
	public ParserRule getSequenceTasksItemsRule() {
		return getSequenceTasksItemsAccess().getRule();
	}
	
	////EClass Task
	//Task returns Task:
	//    {Task}
	//            //EReference is not a keyword
	//            '{'(Task+=TaskPropertiesAbstract ( "," Task+=TaskPropertiesAbstract)* )?'}'
	//    ;
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	////EClass TaskName
	//TaskName returns TaskName:
	//    {TaskName}
	//    //Keyword?s Name
	//    //Keywords
	//    '"name"' ':'
	//    name=EString
	//    ;
	public TaskNameElements getTaskNameAccess() {
		return pTaskName;
	}
	
	public ParserRule getTaskNameRule() {
		return getTaskNameAccess().getRule();
	}
	
	////EClass TaskProperties
	//TaskProperties returns TaskProperties:
	//    {TaskProperties}
	//            //Keywords
	//            '"properties"' ':'
	//            '{'(properties+=TaskPropertiesPropertiesAbstract ( "," properties+=TaskPropertiesPropertiesAbstract)* )?'}'
	//    ;
	public TaskPropertiesElements getTaskPropertiesAccess() {
		return pTaskProperties;
	}
	
	public ParserRule getTaskPropertiesRule() {
		return getTaskPropertiesAccess().getRule();
	}
	
	////EClass TaskPropertiesAdditionalProperties
	//TaskPropertiesAdditionalProperties returns TaskPropertiesAdditionalProperties:
	//        //KeyValue
	//        key=EString
	//        ':'
	//            //EReference is not a keyword
	//            additionalProperties=JsonDocument
	//    ;
	public TaskPropertiesAdditionalPropertiesElements getTaskPropertiesAdditionalPropertiesAccess() {
		return pTaskPropertiesAdditionalProperties;
	}
	
	public ParserRule getTaskPropertiesAdditionalPropertiesRule() {
		return getTaskPropertiesAdditionalPropertiesAccess().getRule();
	}
	
	////EClass JsonDocument
	//JsonDocument returns jsonMetaschemaMM::JsonDocument:
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public JsonDocumentElements getJsonDocumentAccess() {
		return pJsonDocument;
	}
	
	public ParserRule getJsonDocumentRule() {
		return getJsonDocumentAccess().getRule();
	}
	
	////EClass IntegerValue
	//IntegerValue returns jsonMetaschemaMM::IntegerValue:
	//        value=EInt
	//    ;
	public IntegerValueElements getIntegerValueAccess() {
		return pIntegerValue;
	}
	
	public ParserRule getIntegerValueRule() {
		return getIntegerValueAccess().getRule();
	}
	
	////EClass BooleanValue
	//BooleanValue returns jsonMetaschemaMM::BooleanValue:
	//    value?='value'
	//    ;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	////EClass NullValue
	//NullValue returns jsonMetaschemaMM::NullValue:
	//        value=NullEnum
	//    ;
	public NullValueElements getNullValueAccess() {
		return pNullValue;
	}
	
	public ParserRule getNullValueRule() {
		return getNullValueAccess().getRule();
	}
	
	////EClass StringValue
	//StringValue returns jsonMetaschemaMM::StringValue:
	//        value=EString
	//    ;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	////EClass ObjectValue
	//ObjectValue returns jsonMetaschemaMM::ObjectValue:
	//    {jsonMetaschemaMM::ObjectValue}
	//    '{'
	//            //EReference is not a keyword
	//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	//    '}';
	public ObjectValueElements getObjectValueAccess() {
		return pObjectValue;
	}
	
	public ParserRule getObjectValueRule() {
		return getObjectValueAccess().getRule();
	}
	
	////EClass NumberValue
	//NumberValue returns jsonMetaschemaMM::NumberValue:
	//        value=EDouble
	//    ;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	////EClass ArrayValue
	//ArrayValue returns jsonMetaschemaMM::ArrayValue:
	//    {jsonMetaschemaMM::ArrayValue}
	//            //EReference is not a keyword
	//            '['(value+=Value ( "," value+=Value)* )?']'
	//    ;
	public ArrayValueElements getArrayValueAccess() {
		return pArrayValue;
	}
	
	public ParserRule getArrayValueRule() {
		return getArrayValueAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum NullEnum returns jsonMetaschemaMM::NullEnum:
	//                null = 'null';
	public NullEnumElements getNullEnumAccess() {
		return eNullEnum;
	}
	
	public EnumRule getNullEnumRule() {
		return getNullEnumAccess().getRule();
	}
	
	////EClass KeyValuePair
	//KeyValuePair returns jsonMetaschemaMM::KeyValuePair:
	//        //KeyValue
	//        key=EString
	//        ':'
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public KeyValuePairElements getKeyValuePairAccess() {
		return pKeyValuePair;
	}
	
	public ParserRule getKeyValuePairRule() {
		return getKeyValuePairAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
