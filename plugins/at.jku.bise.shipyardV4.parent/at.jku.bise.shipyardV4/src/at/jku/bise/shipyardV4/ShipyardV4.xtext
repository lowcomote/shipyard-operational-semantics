// automatically generated by Xtext JSON
grammar at.jku.bise.shipyardV4.ShipyardV4 with org.eclipse.xtext.common.Terminals

import "http://jku.bise.at/shipyardV4" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://at.jku.bise/jsonMetaschemaMM" as jsonMetaschemaMM

//EClass ShipyardV4Root
ShipyardV4Root returns ShipyardV4Root:
			//EReference is not a keyword
			shipyardV4Root=Shipyard
	;


ShipyardPropertiesAbstract returns ShipyardPropertiesAbstract:
	ShipyardApiVersion | ShipyardKind | ShipyardMetadata | ShipyardSpec1;



MetadataPropertiesAbstract returns MetadataPropertiesAbstract:
	MetadataName;

ShipyardSpecPropertiesAbstract returns ShipyardSpecPropertiesAbstract:
	ShipyardSpecStages;



StagePropertiesAbstract returns StagePropertiesAbstract:
	StageName | StageSequences;



SequencePropertiesAbstract returns SequencePropertiesAbstract:
	SequenceName | SequenceTriggeredOn | SequenceTasks;




TriggerPropertiesAbstract returns TriggerPropertiesAbstract:
	TriggerEvent | TriggerSelector;


SelectorPropertiesAbstract returns SelectorPropertiesAbstract:
	SelectorMatch;

SelectorMatchPropertiesAbstract returns SelectorMatchPropertiesAbstract:
	SelectorMatchPatternProperties0;


TaskPropertiesAbstract returns TaskPropertiesAbstract:
	TaskName | TaskProperties;

TaskPropertiesPropertiesAbstract returns TaskPropertiesPropertiesAbstract:
	TaskPropertiesAdditionalProperties;


Value returns jsonMetaschemaMM::Value:
	IntegerValue | BooleanValue | NullValue | StringValue | ObjectValue | NumberValue | ArrayValue;


//EClass Shipyard
Shipyard returns Shipyard:
	{Shipyard}
			//EReference is not a keyword
			'{'(Shipyard+=ShipyardPropertiesAbstract ( "," Shipyard+=ShipyardPropertiesAbstract)* )?'}'
	;

//EClass ShipyardApiVersion
ShipyardApiVersion returns ShipyardApiVersion:
		//Keywords
		'"apiVersion"' ':'
		apiVersion=EString
	;

//EClass ShipyardKind
ShipyardKind returns ShipyardKind:
		//Keywords
		'"kind"' ':'
		kind=EString
	;

//EClass ShipyardMetadata
ShipyardMetadata returns ShipyardMetadata:
			//Keywords
			'"metadata"' ':'
			metadata=Metadata
	;

//EClass ShipyardSpec1
ShipyardSpec1 returns ShipyardSpec1:
			//Keywords
			'"spec"' ':'
			spec=ShipyardSpec
	;

EString returns ecore::EString:
	STRING | ID;

//EClass Metadata
Metadata returns Metadata:
	{Metadata}
			//EReference is not a keyword
			'{'(Metadata+=MetadataPropertiesAbstract ( "," Metadata+=MetadataPropertiesAbstract)* )?'}'
	;

//EClass MetadataName
MetadataName returns MetadataName:
	{MetadataName}
	//Keyword?s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass ShipyardSpec
ShipyardSpec returns ShipyardSpec:
	{ShipyardSpec}
			//EReference is not a keyword
			'{'(ShipyardSpec+=ShipyardSpecPropertiesAbstract ( "," ShipyardSpec+=ShipyardSpecPropertiesAbstract)* )?'}'
	;

//EClass ShipyardSpecStages
ShipyardSpecStages returns ShipyardSpecStages:
	{ShipyardSpecStages}
			//Keywords
			'"stages"' ':'
			'['(stages+=ShipyardSpecStagesItems ( "," stages+=ShipyardSpecStagesItems)* )?']'
	;

//EClass ShipyardSpecStagesItems
ShipyardSpecStagesItems returns ShipyardSpecStagesItems:
			//EReference is not a keyword
			items=Stage
	;

//EClass Stage
Stage returns Stage:
	{Stage}
			//EReference is not a keyword
			'{'(Stage+=StagePropertiesAbstract ( "," Stage+=StagePropertiesAbstract)* )?'}'
	;

//EClass StageName
StageName returns StageName:
	{StageName}
	//Keyword?s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass StageSequences
StageSequences returns StageSequences:
	{StageSequences}
			//Keywords
			'"sequences"' ':'
			'['(sequences+=StageSequencesItems ( "," sequences+=StageSequencesItems)* )?']'
	;

//EClass StageSequencesItems
StageSequencesItems returns StageSequencesItems:
			//EReference is not a keyword
			items=Sequence
	;

//EClass Sequence
Sequence returns Sequence:
	{Sequence}
			//EReference is not a keyword
			'{'(Sequence+=SequencePropertiesAbstract ( "," Sequence+=SequencePropertiesAbstract)* )?'}'
	;

//EClass SequenceName
SequenceName returns SequenceName:
	{SequenceName}
	//Keyword?s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass SequenceTriggeredOn
SequenceTriggeredOn returns SequenceTriggeredOn:
	{SequenceTriggeredOn}
			//Keywords
			'"triggeredOn"' ':'
			'['(triggeredOn+=SequenceTriggeredOnItems ( "," triggeredOn+=SequenceTriggeredOnItems)* )?']'
	;

//EClass SequenceTasks
SequenceTasks returns SequenceTasks:
	{SequenceTasks}
			//Keywords
			'"tasks"' ':'
			'['(tasks+=SequenceTasksItems ( "," tasks+=SequenceTasksItems)* )?']'
	;

//EClass SequenceTriggeredOnItems
SequenceTriggeredOnItems returns SequenceTriggeredOnItems:
			//EReference is not a keyword
			items=Trigger
	;

//EClass Trigger
Trigger returns Trigger:
	{Trigger}
			//EReference is not a keyword
			'{'(Trigger+=TriggerPropertiesAbstract ( "," Trigger+=TriggerPropertiesAbstract)* )?'}'
	;

//EClass TriggerEvent
TriggerEvent returns TriggerEvent:
		//Keywords
		'"event"' ':'
		event=EString
	;

//EClass TriggerSelector
TriggerSelector returns TriggerSelector:
			//Keywords
			'"selector"' ':'
			selector=Selector
	;

//EClass Selector
Selector returns Selector:
	{Selector}
			//EReference is not a keyword
			'{'(Selector+=SelectorPropertiesAbstract ( "," Selector+=SelectorPropertiesAbstract)* )?'}'
	;

//EClass SelectorMatch
SelectorMatch returns SelectorMatch:
	{SelectorMatch}
			//Keywords
			'"match"' ':'
			'{'(match+=SelectorMatchPropertiesAbstract ( "," match+=SelectorMatchPropertiesAbstract)* )?'}'
	;

//EClass SelectorMatchPatternProperties0
SelectorMatchPatternProperties0 returns SelectorMatchPatternProperties0:
		//KeyValue
		key=EString
		':'
		patternProperties0=EString
	;

//EClass SequenceTasksItems
SequenceTasksItems returns SequenceTasksItems:
			//EReference is not a keyword
			items=Task
	;

//EClass Task
Task returns Task:
	{Task}
			//EReference is not a keyword
			'{'(Task+=TaskPropertiesAbstract ( "," Task+=TaskPropertiesAbstract)* )?'}'
	;

//EClass TaskName
TaskName returns TaskName:
	{TaskName}
	//Keyword?s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass TaskProperties
TaskProperties returns TaskProperties:
	{TaskProperties}
			//Keywords
			'"properties"' ':'
			'{'(properties+=TaskPropertiesPropertiesAbstract ( "," properties+=TaskPropertiesPropertiesAbstract)* )?'}'
	;

//EClass TaskPropertiesAdditionalProperties
TaskPropertiesAdditionalProperties returns TaskPropertiesAdditionalProperties:
		//KeyValue
		key=EString
		':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass JsonDocument
JsonDocument returns jsonMetaschemaMM::JsonDocument:
			//EReference is not a keyword
			value=Value
	;

//EClass IntegerValue
IntegerValue returns jsonMetaschemaMM::IntegerValue:
		value=EInt
	;

//EClass BooleanValue
BooleanValue returns jsonMetaschemaMM::BooleanValue:
	value?='value'
	;

//EClass NullValue
NullValue returns jsonMetaschemaMM::NullValue:
		value=NullEnum
	;

//EClass StringValue
StringValue returns jsonMetaschemaMM::StringValue:
		value=EString
	;

//EClass ObjectValue
ObjectValue returns jsonMetaschemaMM::ObjectValue:
	{jsonMetaschemaMM::ObjectValue}
	'{'
			//EReference is not a keyword
			(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	'}';

//EClass NumberValue
NumberValue returns jsonMetaschemaMM::NumberValue:
		value=EDouble
	;

//EClass ArrayValue
ArrayValue returns jsonMetaschemaMM::ArrayValue:
	{jsonMetaschemaMM::ArrayValue}
			//EReference is not a keyword
			'['(value+=Value ( "," value+=Value)* )?']'
	;

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum NullEnum returns jsonMetaschemaMM::NullEnum:
				null = 'null';

//EClass KeyValuePair
KeyValuePair returns jsonMetaschemaMM::KeyValuePair:
		//KeyValue
		key=EString
		':'
			//EReference is not a keyword
			value=Value
	;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

